pico-8 cartridge // http://www.pico-8.com
version 18
__lua__

--******************SORT a list of numbers from high to low*******
a={3,6,01,-1,354,9} --sample array / list of numbers
function sort(s)
 local nt={} -- create an empty array to move the highest numbers into
  while #s>0 do -- Keep looping through the original as long as the array isn't empty 
  for i=1,#s do -- outer loop of a nested loop
   local bool=true -- reset the boolean to true every outer loop
   for j=1,#s do  
    bool=bool and s[i]>=s[j] --boolean will only remain true if value we are checking in the outer loop is the highest value in the array
    
   end
   if bool then -- add this highest value to the new table and delete it frome the original
    add(nt,s[i])
    del(s,s[i])
    break -- breaks out of the loop after the delete so you don't try to use a value that is no longer there
   end
  end
 end
 s=nt -- fill the old array to the local new array that is sorted
 foreach(s,print) --this is a function that runs through all elements of the array.  Using it to print them.
end
cls()
sort(a)

function _draw()
 cls()
 for i=0,15 do
  x=64+cos(t()/2+i/16)*40
  y=64+sin(t()/4+i/16)*40
  spr(2,x,y)
 end
end


__gfx__
00000000007770000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000777770000bbbb0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700077077700b77b77000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000070070700b7cb7c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000077777700bbbbbb000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700077777000bbbbbb000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000777000bbbbbb000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000007070700b0b0b0b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
